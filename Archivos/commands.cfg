###############################################################################
# COMMANDS.CFG - SAMPLE COMMAND DEFINITIONS FOR NAGIOS 4.4.6
#
#
# NOTES: This config file provides you with some example command definitions
#        that you can reference in host, service, and contact definitions.
#
#        You don't need to keep commands in a separate file from your other
#        object definitions.  This has been done just to make things easier to
#        understand.
#
###############################################################################



################################################################################
#
# SAMPLE NOTIFICATION COMMANDS
#
# These are some example notification commands.  They may or may not work on
# your system without modification.  As an example, some systems will require
# you to use "/usr/bin/mailx" instead of "/usr/bin/mail" in the commands below.
#
################################################################################

define command {

    command_name    notify-host-by-email
    command_line    /usr/bin/printf "%b" "***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\nHost: $HOSTNAME$\nState: $HOSTSTATE$\nAddress: $HOSTADDRESS$\nInfo: $HOSTOUTPUT$\n\nDate/Time: $LONGDATETIME$\n" | /usr/sbin/sendmail -s "** $NOTIFICATIONTYPE$ Host Alert: $HOSTNAME$ is $HOSTSTATE$ **" $CONTACTEMAIL$
}



define command {

    command_name    notify-service-by-email
    command_line    /usr/bin/printf "%b" "***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\n\nService: $SERVICEDESC$\nHost: $HOSTALIAS$\nAddress: $HOSTADDRESS$\nState: $SERVICESTATE$\n\nDate/Time: $LONGDATETIME$\n\nAdditional Info:\n\n$SERVICEOUTPUT$\n" | /usr/sbin/sendmail -s "** $NOTIFICATIONTYPE$ Service Alert: $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$ **" $CONTACTEMAIL$
}


################################################################################
##
##	Comandos utilizados para las notificaciones por Telegram
##
################################################################################

# 'notify-host-by-telegram-bot' command definition
define command{
  command_name    notify-host-by-telegram-bot
  command_line    /usr/bin/wget "https://api.telegram.org/bot1112695082:AAEwKO-hWGjz3dYFZRTnAsGWpgcDtyiFVks/sendMessage?chat_id=-285888808&text=***** Nagios *****%0A%0ANotification Type: $NOTIFICATIONTYPE$%0AHost: $HOSTNAME$%0AState: $HOSTSTATE$%0AAddress: $HOSTADDRESS$%0AInfo: $HOSTOUTPUT$%0A%0ADate/Time: $LONGDATETIME$%0A"
}


# 'notify-service-by-telegram-bot' command definition
define command{
  command_name    notify-service-by-telegram-bot
  command_line    /usr/bin/wget "https://api.telegram.org/bot1112695082:AAEwKO-hWGjz3dYFZRTnAsGWpgcDtyiFVks/sendMessage?chat_id=-285888808&text=***** Nagios *****%0A%0ANotification Type: $NOTIFICATIONTYPE$%0A%0AService: $SERVICEDESC$%0AHost: $HOSTALIAS$%0AAddress: $HOSTADDRESS$%0AState: $SERVICESTATE$%0A%0ADate/Time: $LONGDATETIME$%0A%0AAdditional Info:%0A%0A$SERVICEOUTPUT$%0A"
}

################################################################################
#
# SAMPLE HOST CHECK COMMANDS
#
################################################################################

# This command checks to see if a host is "alive" by pinging it
# The check must result in a 100% packet loss or 5 second (5000ms) round trip
# average time to produce a critical error.
# Note: Five ICMP echo packets are sent (determined by the '-p 5' argument)

define command {

    command_name    check-host-alive
    command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w 3000.0,80% -c 5000.0,100% -p 5
}



################################################################################
#
# SAMPLE SERVICE CHECK COMMANDS
#
# These are some example service check commands.  They may or may not work on
# your system, as they must be modified for your plugins.  See the HTML
# documentation on the plugins for examples of how to configure command definitions.
#
# NOTE:  The following 'check_local_...' functions are designed to monitor
#        various metrics on the host that Nagios is running on (i.e. this one).
################################################################################

define command {

    command_name    check_local_disk
    command_line    $USER1$/check_disk -w $ARG1$ -c $ARG2$ -p $ARG3$
}



define command {

    command_name    check_local_load
    command_line    $USER1$/check_load -w $ARG1$ -c $ARG2$
}



define command {

    command_name    check_local_procs
    command_line    $USER1$/check_procs -w $ARG1$ -c $ARG2$ -s $ARG3$
}



define command {

    command_name    check_local_users
    command_line    $USER1$/check_users -w $ARG1$ -c $ARG2$
}



define command {

    command_name    check_local_swap
    command_line    $USER1$/check_swap -w $ARG1$ -c $ARG2$
}



define command {

    command_name    check_local_mrtgtraf
    command_line    $USER1$/check_mrtgtraf -F $ARG1$ -a $ARG2$ -w $ARG3$ -c $ARG4$ -e $ARG5$
}



################################################################################
# NOTE:  The following 'check_...' commands are used to monitor services on
#        both local and remote hosts.
################################################################################

define command {

    command_name    check_ftp
    command_line    $USER1$/check_ftp -H $HOSTADDRESS$ $ARG1$
}



define command {

    command_name    check_hpjd
    command_line    $USER1$/check_hpjd -H $HOSTADDRESS$ $ARG1$
}



define command {

    command_name    check_snmp
    command_line    $USER1$/check_snmp -H $HOSTADDRESS$ $ARG1$
}



define command {

    command_name    check_http
    command_line    $USER1$/check_http -I $HOSTADDRESS$ $ARG1$
}



define command {

    command_name    check_ssh
    command_line    $USER1$/check_ssh $ARG1$ $HOSTADDRESS$
}



define command {

    command_name    check_dhcp
    command_line    $USER1$/check_dhcp $ARG1$
}



define command {

    command_name    check_ping
    command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w $ARG1$ -c $ARG2$ -p 5
}



define command {

    command_name    check_pop
    command_line    $USER1$/check_pop -H $HOSTADDRESS$ $ARG1$
}



define command {

    command_name    check_imap
    command_line    $USER1$/check_imap -H $HOSTADDRESS$ $ARG1$
}



define command {

    command_name    check_smtp
    command_line    $USER1$/check_smtp -H $HOSTADDRESS$ $ARG1$
}



define command {

    command_name    check_tcp
    command_line    $USER1$/check_tcp -H $HOSTADDRESS$ -p $ARG1$ $ARG2$
}



define command {

    command_name    check_udp
    command_line    $USER1$/check_udp -H $HOSTADDRESS$ -p $ARG1$ $ARG2$
}



define command {

    command_name    check_nt
    command_line    $USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -v $ARG1$ $ARG2$
}



################################################################################
#
# SAMPLE PERFORMANCE DATA COMMANDS
#
# These are sample performance data commands that can be used to send performance
# data output to two text files (one for hosts, another for services).  If you
# plan on simply writing performance data out to a file, consider using the
# host_perfdata_file and service_perfdata_file options in the main config file.
#
################################################################################

define command {

    command_name    process-host-perfdata
    command_line    /usr/bin/printf "%b" "$LASTHOSTCHECK$\t$HOSTNAME$\t$HOSTSTATE$\t$HOSTATTEMPT$\t$HOSTSTATETYPE$\t$HOSTEXECUTIONTIME$\t$HOSTOUTPUT$\t$HOSTPERFDATA$\n" >> /usr/local/nagios/var/host-perfdata.out
}



define command {

    command_name    process-service-perfdata
    command_line    /usr/bin/printf "%b" "$LASTSERVICECHECK$\t$HOSTNAME$\t$SERVICEDESC$\t$SERVICESTATE$\t$SERVICEATTEMPT$\t$SERVICESTATETYPE$\t$SERVICEEXECUTIONTIME$\t$SERVICELATENCY$\t$SERVICEOUTPUT$\t$SERVICEPERFDATA$\n" >> /usr/local/nagios/var/service-perfdata.out
}

################################################################################
##					
##	Comandos para PNP4NAGIOS	
##					
################################################################################

define command {
	command_name process-service-perfdata-file
	command_line /bin/mv /usr/local/pnp4nagios/var/service-perfdata /usr/local/pnp4nagios/var/spool/service-perfdata.$TIMET$
}

define command {
	command_name process-host-perfdata-file
	command_line /bin/mv /usr/local/pnp4nagios/var/host-perfdata /usr/local/pnp4nagios/var/spool/host-perfdata.$TIMET$
}


################################################################################
##					
##	Comandos utilizados para SNMP	
##					
################################################################################

## SNMP Command Definition - Up time
define command{
	command_name    SNMP-Uptime
	command_line    $USER1$/check_snmp -o 1.3.6.1.2.1.25.1.1.0 -H $HOSTADDRESS$ $ARG1$
}

## SNMP Command Definition - Total RAM installed 
define command{
	command_name    SNMP-TotalRAMInstalled
	command_line    $USER1$/check_snmp -o 1.3.6.1.4.1.2021.4.5.0 -H $HOSTADDRESS$ $ARG1$
}

## SNMP Command Definition - Total Physical Memory
define command{
	command_name    HOST-RESOURCES-MIB::hrStorageSize.1
	command_line    $USER1$/check_snmp -o .1.3.6.1.2.1.25.2.3.1.5.1 -H $HOSTADDRESS$ $ARG1$
}

## SNMP Command Definition - Used Physical Memory
define command{
	command_name    HOST-RESOURCES-MIB::hrStorageUsed.1
	command_line    $USER1$/check_snmp -o .1.3.6.1.2.1.25.2.3.1.6.1 -H $HOSTADDRESS$ $ARG1$
}

## SNMP Command Definition - Cached Physical Memory
define command{
	command_name    HOST-RESOURCES-MIB::hrStorageSize.7
	command_line    $USER1$/check_snmp -o .1.3.6.1.2.1.25.2.3.1.5.7 -H $HOSTADDRESS$ $ARG1$
}

## SNMP Command Definition - Buffered Physical Memory
define command{
	command_name    HOST-RESOURCES-MIB::hrStorageDescr.6
	command_line    $USER1$/check_snmp -o .1.3.6.1.2.1.25.2.3.1.5.6 -H $HOSTADDRESS$ $ARG1$
}

# Total ROOT Partition Size 
define command{
	command_name    HOST-RESOURCES-MIB::hrStorageDescr.31
	command_line    $USER1$/check_snmp -o .1.3.6.1.2.1.25.2.3.1.3.31 -H $HOSTADDRESS$ $ARG1$
}

# Used ROOT Partition Size 
define command{
	command_name    HOST-RESOURCES-MIB::hrStorageUsed.31
	command_line    $USER1$/check_snmp -o .1.3.6.1.2.1.25.2.3.1.6.31 -H $HOSTADDRESS$ $ARG1$
}

# Running processes
define command{
	command_name    SNMP-TotalProccessRunning
	command_line    $USER1$/check_snmp -o .1.3.6.1.2.1.25.1.6.0 -H $HOSTADDRESS$ $ARG1$
}

# CPU Load 1m
define command{
	command_name    snmp_load_1m
	command_line    $USER1$/check_snmp -o .1.3.6.1.4.1.2021.10.1.3.1 -H $HOSTADDRESS$ $ARG1$
}
# CPU Load 15m
define command{
	command_name    snmp_load_15m
	command_line    $USER1$/check_snmp -o .1.3.6.1.4.1.2021.10.1.3.3 -H $HOSTADDRESS$ $ARG1$
}

## check_snmp_storage command definitions

## SNMP Command Definiton - DISK
define command{
	command_name	check_snmp_storage
	command_line	$USER1$/check_snmp_storage.pl -H $HOSTADDRESS$ -C publica -2 $USER8$ -m $ARG1$ -w $ARG2$ -c $ARG3$ $ARG4$ $ARG5$
}

## check_snmp_mem command definitions

## SNMP Command Definition - Physical Memory
define command{
	command_name	check_snmp_mem
	command_line	$USER1$/check_snmp_storage.pl -H $HOSTADDRESS$ -C publica -2 $USER8$ -m $ARG1$ -w $ARG2$ -c $ARG3$ $ARG4$ $ARG5$
}

## check_snmp_process command definitions

## SNMP Command Definition - Process
define command{
	command_name	check_snmp_process
	command_line	$USER1$/check_snmp_process.pl -H $HOSTADDRESS$ $USER7$ -n $ARG1$ -w $ARG2$ -c $ARG3$ $ARG4$ -C publica
}

## check_snmp_load command definitions

## SNMP Command Definiton - CPU Load
define command{
	command_name	check_snmp_load
	command_line	$USER1$/check_snmp_load.pl -H $HOSTADDRESS$ $USER7$ -T $ARG1$ -w $ARG2$ -c $ARG3$ $ARG4$ -C publica
}

## check_snmp_int command definitions

## SNMP Command Definition - Interface 
define command{
	command_name	check_snmp_iface
	command_line	$USER1$/check_snmp_int.pl -H $HOSTADDRESS$ -n $ARG1$ -w $ARG2$ -c $ARG3$ -C publica
}


## 'check_dns' command definitions

## SNMP Command Definition - DNS
define command {
	command_name	check_dns
	command_line	$USER1$/check_dns -H digitalave.github.io -s 8.8.8.8 -t 15 | sed  -e "s/returns.*//g" 
}

########## checking using NRPE/Script #############

## check_volume command definition

define command{
	command_name	check_volume
	command_line	$USER1$/check_volume.sh -v $ARG1$ -w $ARG2$ -c $ARG3$
}
